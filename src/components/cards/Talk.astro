---
import { type CollectionEntry } from 'astro:content';
import { getThumbnail } from '@/utils/image.js';
import Card from '@/components/Card.astro';
import { Icon } from 'astro-icon/components';
import { toReadableDate } from '@/utils/common';

type Talk = CollectionEntry<'appearances'>['data'];

interface Props {
	appearance: CollectionEntry<'appearances'>;
}

const talkTypeMap = {
	'Conference Talk': {
		icon: 'mdi:presentation-play',
		bgClass: 'bg-vivid-light-blue-100',
		iconClass: 'text-vivid-light-blue-700',
	},
	Panel: { icon: 'mdi:forum', bgClass: 'bg-teal-100', iconClass: 'text-teal-800' },
	Workshop: { icon: 'mdi:hammer-wrench', bgClass: 'bg-yellow-100', iconClass: 'text-yellow-800' },
	Keynote: { icon: 'mdi:star', bgClass: 'bg-vivid-pink-100', iconClass: 'text-vivid-pink-800' },
	'Lightning Talk': { icon: 'mdi:flash', bgClass: 'bg-purple-100', iconClass: '' },
	Podcast: { icon: 'mdi:microphone', bgClass: 'bg-vivid-yellow-100', iconClass: 'bg-vivid-yellow-600' },
	Moderation: { icon: 'mdi:forum', bgClass: 'bg-vivid-pink-100', iconClass: 'text-vivid-pink-300' },
} as const;

const { appearance: talk } = Astro.props;
const { slug } = talk;
const { type, title, instances } = talk.data;
const thumbnail = await getThumbnail(talk.data);
const hasMultipleInstances = instances.length > 1;
const firstInstance = instances[0]!;
const { icon, bgClass, iconClass } = talkTypeMap[type as keyof typeof talkTypeMap];
const date = toReadableDate(firstInstance.date);
---

<Card
	class="bg-white dark:bg-gray-900"
	image={thumbnail}
	imageWidth={240}
	imageHeight={135}
	imageAlt={title}
	hover
	title={title}
	interactive
	border
	href={hasMultipleInstances ? `/speaking/${slug}` : firstInstance.url}
>
	<div>
		<div class="mb-2">
			<span class:list={['flex items-center gap-2 text-xs font-bold', iconClass]}>
				<span class:list={[bgClass, 'inline-block rounded-full p-1']}>
					<Icon class:list={[iconClass]} name={icon} />
				</span>
				<span class="text-xl font-bold">{type}</span>
			</span>

			{
				hasMultipleInstances ? (
					<div class="mt-2 space-y-1">
						<div class="text-md flex items-center justify-between font-medium text-gray-600 dark:text-gray-400">
							<div class="flex items-center gap-1">
								<Icon name="mdi:star-circle" />
								<span>{instances.length} appearances</span>
							</div>
						</div>
					</div>
				) : (
					<div class="text-md mt-2 flex flex-col font-medium text-gray-500 dark:text-gray-400">
						<div class="flex items-center gap-1">
							<Icon name="mdi:ticket" />
							{firstInstance.event}
						</div>
						<div class="flex gap-2">
							<div class="flex items-center gap-1">
								<Icon name="mdi:map-marker" />
								{firstInstance.location}
							</div>
							<div class="flex items-center gap-1">
								<Icon name="mdi:calendar" />
								{date}
							</div>
						</div>
					</div>
				)
			}
		</div>
	</div>
</Card>
