---
import { type CollectionEntry } from 'astro:content';

type ProjectType = CollectionEntry<'projects'>['data'];
interface Props extends ProjectType {}
import { getAsset } from '@/utils/image.js';
import { Image } from 'astro:assets';

const image = Astro.props.image ? await getAsset(Astro.props.image) : null;

const { name, url, roles, description, status } = Astro.props;
---

<div
	class="align-center not-prose m-2 flex flex-col place-content-evenly justify-center space-x-2 space-y-2 rounded-lg bg-cool-gray-50 p-2 py-4 text-cool-gray-900 shadow-lg dark:bg-cool-gray-900 dark:text-cool-gray-50"
>
	<a href={url} target="_blank" class="no-underline">
		<div class="flex">
			<div class="align-items-center flex place-content-evenly justify-items-center">
				{
					image && (
						<Image alt="JS Party" class="mx-2 h-16 w-16 rounded" src={image} quality="high" height={128} width={128} />
					)
				}
				<div class="flex w-64 flex-col">
					<h5 class="text-xl font-medium leading-tight">{name}</h5>
					<p class="mb-2 w-64 p-2 text-sm">{description}</p>
				</div>
			</div>
		</div>
		<div class="flex place-content-baseline">
			{
				roles.map(role => (
					<span class="last mr-1 inline-block rounded-full bg-teal-200 px-2 py-1 text-xs font-semibold uppercase text-teal-700 last:mr-0">
						{role}
					</span>
				))
			}
			{
				status === 'inactive' && (
					<span class="last mr-1 inline-block rounded-full bg-red-200 px-2 py-1 text-xs font-semibold uppercase text-red-700 last:mr-0">
						{status}
					</span>
				)
			}
		</div>
	</a>
</div>
