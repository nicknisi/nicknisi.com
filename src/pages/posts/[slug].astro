---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '@/layouts/Base.astro';
import { Icon } from 'astro-icon/components';
import { toReadableDate, getWordCount } from '@/utils/common';
import metadata from '@/data/metadata.json';
import Tag from '@/components/Tag.astro';
import { getAsset } from '@/utils/image.js';
import { Image } from 'astro:assets';
import LikeCount from '@/components/bluesky/LikeCount';
import Comments from '@/components/bluesky/Comments';
import Likes from '@/components/bluesky/Likes';

interface Props {
	post: CollectionEntry<'posts'>;
	prevPost: CollectionEntry<'posts'> | null;
}

export async function getStaticPaths() {
	const mode = import.meta.env.MODE;
	const posts = await getCollection('posts', post => (mode === 'production' ? !post.data.draft : true));
	return posts.map((post, i) => ({
		params: { slug: post.slug },
		props: { post, prevPost: i > 0 ? posts[i - 1] : null },
	}));
}

const { post, prevPost } = Astro.props;
const {
	slug,
	data: { hero, title, description, pubDate, tags = [], draft, post: postUri },
} = post;
const { Content } = await post.render();
const date = toReadableDate(pubDate);
const wordCount = getWordCount(post?.body);
const profileImg = await getAsset(metadata.profile);
---

<div>
	{
		draft && (
			<div class="sticky top-0 z-40 w-full bg-red-800 text-lg font-bold text-white">
				<div class="container mx-auto py-2">
					<p class="text-center">DRAFT POST</p>
				</div>
			</div>
		)
	}
	<BaseLayout heroImage={hero} title={title} description={description} headerImage={`/posts/${slug}/og.png`}>
		<div
			class="prose prose-slate dark:prose-invert lg:prose-xl prose-headings:my-3 prose-headings:text-blue-gray-900 prose-a:text-teal-600 prose-code:font-medium prose-code:text-purple-800 prose-code:before:content-[''] prose-code:after:content-[''] dark:prose-headings:text-gray-200 dark:prose-a:text-teal-400 dark:prose-code:text-purple-100 pt-6 pb-10"
		>
			<article class="pt-10">
				<header class="mb-8">
					{!hero && <h1 class="mb-4 text-3xl font-bold tracking-tight md:text-5xl">{title}</h1>}
					<div class="flex gap-2 text-sm font-light text-gray-600 sm:gap-1">
						<span class="uppercase">{date}</span>
						<span class="hidden md:inline">•</span>
						<span class="uppercase">{wordCount} minute read</span>
						{
							postUri && (
								<>
									<span class="hidden sm:inline">•</span>
									<LikeCount client:load post={postUri}>
										<Icon slot="likeIcon" name="mdi:heart-outline" class="h-6 w-6" />
									</LikeCount>
								</>
							)
						}
						<span class="hidden sm:inline">
							<span class="hidden sm:inline">•</span>
							<span>
								{tags.map((tag: string) => <Tag name={tag} />)}
							</span>
						</span>
					</div>
				</header>
				<section>
					<Content />
				</section>
				{postUri && <Likes client:load post={postUri} />}
				{postUri && <Comments client:load post={postUri} />}
				<div class="flex justify-center py-5 text-center sm:py-5">
					<Icon name="mdi:star-outline" class="h-12 w-12 font-bold text-purple-600 dark:text-purple-200" />
					<Icon name="mdi:star-outline" class="h-12 w-12 font-bold text-purple-600 dark:text-purple-200" />
					<Icon name="mdi:star-outline" class="h-12 w-12 font-bold text-purple-600 dark:text-purple-200" />
				</div>
				{
					prevPost && (
						<div class="mt-8 mb-4 flex justify-start">
							<a href={`/posts/${prevPost.slug}`} class="flex items-center space-x-4 font-medium">
								<Icon name="mdi:arrow-left-bold" class="h-6 w-6" />
								<span>{prevPost.data.title}</span>
							</a>
						</div>
					)
				}
				<div class="mx-auto flex flex-col items-center sm:flex-row">
					<div
						class="inline-flex h-32 w-32 shrink-0 items-center justify-center rounded-full text-blue-500 sm:mr-10 sm:h-32 sm:w-32"
					>
						<Image
							src={profileImg}
							alt="author"
							height={512}
							width={512}
							quality="max"
							class="h-32 w-32 rounded-full drop-shadow-lg"
						/>
					</div>
					<div class="mt-6 grow text-center sm:mt-0 sm:text-left">
						<h2 class="title-font mb-2 text-lg font-medium text-gray-900">
							{metadata.author.name}
						</h2>
						<p class="text-base leading-relaxed">{metadata.description}</p>
						<p class="text-base leading-relaxed">
							Follow me on
							<a class="primary-link" href={metadata.social.bluesky.url}>Bluesky</a>.
						</p>
					</div>
				</div>
			</article>
		</div>
	</BaseLayout>
</div>
