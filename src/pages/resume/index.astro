---
import Head from '@/components/Head.astro';
import data from './_data.json';
import { Icon } from 'astro-icon/components';
import AssetImage from '@/components/AssetImage.astro';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import '@/styles/base.css';

const projects = (await getCollection('projects', project => !project.data.hidden)).map(project => project.data) ?? [];
const talks = (await getCollection('talks', talk => talk.data.promote)).map(talk => talk.data) ?? [];
const jobs = (await getCollection('jobs')).map(job => job.data) ?? [];
const profiles = (await getCollection('profiles', profile => !profile.data.hidden)).map(profile => profile.data) ?? [];

function dateToYear(date: string) {
	return new Date(date).getFullYear();
}

function getVideoId(url: string) {
	return url.split('?v=')[1];
}

function getVideoThumbnail(videoId: string) {
	console.log({ videoId });
	return `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;
}
---

<html lang="en">
	<Head title="Resume - Nicholas Nisi" description="Nick Nisi's Resume" colorscheme="light" />
	<body>
		<main class="container relative mx-auto scroll-my-12 overflow-auto p-4 md:p-16 print:p-12">
			<section class="print:spacey-y-6 mx-auto max-w-2xl space-y-8 bg-white font-sans">
				<div class="flex flex-col-reverse items-center justify-between sm:flex-row">
					<div class="flex-1 space-y-1.5">
						<h1 class="text-2xl font-bold">{data.basics.name}</h1>
						<p class="max-w-md text-pretty font-mono text-sm">
							{data.basics.summary}
						</p>
						<p class="text-xs text-gray-600">
							{data.basics.location.city}, {data.basics.location.region}
						</p>
						<div class="hidden items-baseline gap-2 text-sm text-gray-600 print:flex">
							<div>
								<Icon name="mdi:envelope-outline" class="mr-1 inline-block size-4" />
								<a href={'mailto:' + data.basics.email}>{data.basics.email}</a>
							</div>
							<div>
								<Icon name="ic:round-phone-iphone" class="mr-1 inline-block size-4" />
								<a href={'tel:' + data.basics.phone}>{data.basics.phone}</a>
							</div>
						</div>
						<div class="flex pt-2 print:hidden">
							<>
								<a
									class="border-1 mr-2 inline-block border-gray-300 text-xs text-gray-400 hover:text-gray-600"
									href={'mailto:' + data.basics.email}
									target="_blank"
									rel="noopener noreferrer"
								>
									<Icon name="mdi:envelope-outline" class="mr-1 inline-block size-4" />
								</a>
								<a
									class="border-1 mr-2 inline-block border-gray-300 text-xs text-gray-400 hover:text-gray-600"
									href={'tel:' + data.basics.phone}
									target="_blank"
									rel="noopener noreferrer"
								>
									<Icon name="ic:round-phone-iphone" class="mr-1 inline-block size-4" />
								</a>
							</>
							<>
								{
									profiles.map(profile => (
										<a
											class="border-1 mr-2 inline-block border-gray-300 text-xs text-gray-400 hover:text-gray-600"
											href={profile.url}
											target="_blank"
											rel="noopener noreferrer"
										>
											<Icon name={`simple-icons:` + profile.network.toLowerCase()} class="mr-1 inline-block size-4" />
										</a>
									))
								}
							</>
						</div>
					</div>
					<AssetImage
						class="mb-8 size-32 rounded-md object-cover object-top sm:mb-0"
						src={data.basics.image}
						alt={data.basics.name}
					/>
				</div>
				<div class="mt-2 space-y-8 print:space-y-4">
					<h2 class="print:text-lg text-2xl font-bold">Work Experience</h2>
					<div class="space-y-8 print:space-y-4">
						{
							jobs.map(job => (
								<div class="space-y-2">
									<div>
										<div class="flex justify-between">
											<div class="flex flex-col items-baseline gap-2 sm:flex-row">
												<div class="text-lg flex items-baseline p-0 font-medium">
													<a class="flex cursor-pointer items-baseline" href={job.url}>
														{job.image && (
															<AssetImage src={job.image} alt={job.name} class="mr-2 inline-block size-4 rounded-md" />
														)}
														{job.name}
													</a>
												</div>
												<div class="flex items-center">
													<div class="font-mono text-xs">{job.location}</div>
													{job.remote && (
														<span class="ml-2 inline-block rounded-md bg-blue-gray-50 p-1 font-mono text-xs font-semibold">
															Remote
														</span>
													)}
												</div>
											</div>
											<div class="flex items-center font-mono text-xs">
												<div>{dateToYear(job.startDate)}</div>
												<div>&nbsp;-&nbsp;</div>
												<div>{job.endDate ? dateToYear(job.endDate) : 'Present'}</div>
											</div>
										</div>
										<div class="font-mono">{job.position}</div>
									</div>
									<div class="border-b border-gray-200 sm:hidden" />
									<div class="font-mono text-sm">
										<ul class="list-disc gap-2 space-y-1">
											{job.highlights?.map(highlight => (
												<li>{highlight}</li>
											))}
										</ul>
									</div>
								</div>
							))
						}
					</div>
				</div>
				<div class="mt-2 space-y-8 print:space-y-4">
					<h2 class="print:text-lg text-2xl font-bold">Projects</h2>
					{/* web layout */}
					<div class="flex flex-1 flex-col flex-wrap gap-4 sm:flex-row print:hidden">
						{
							projects.map(project => (
								<div class="basis-52 space-y-2 border border-gray-100 p-4">
									<h3 class="font-semibold">
										<a href={project.url} class="cursor-pointer" target="_blank" rel="noopener noreferrer">
											{project.image && (
												<AssetImage
													src={project.image}
													alt={project.name}
													class="mr-2 inline-block size-4 rounded-md"
												/>
											)}
											{project.name}
										</a>
									</h3>
									<p class="text-sm text-gray-500">{project.description}</p>
									{project.highlights && (
										<div class="flex flex-wrap gap-2">
											{project.keywords.map(keyword => (
												<div class="inline-block rounded-md bg-blue-gray-50 p-1 font-mono text-xs font-semibold">
													{keyword}
												</div>
											))}
										</div>
									)}
								</div>
							))
						}
					</div>
					{/* print layout */}
					<div class="hidden flex-1 flex-wrap gap-4 print:flex">
						{
							projects.map(project => (
								<div class="flex flex-col gap-1">
									<h3 class="text-lg m-0 p-0 font-medium">
										<a href={project.url} class="cursor-pointer" target="_blank" rel="noopener noreferrer">
											{project.image && (
												<AssetImage
													src={project.image}
													alt={project.name}
													class="mr-2 inline-block size-4 rounded-md"
												/>
											)}
											{project.name}
										</a>
									</h3>
									<p class="p-0 font-mono">{project.description}</p>
									<div class="font-mono text-sm">
										<ul class="list-disc gap-2 space-y-1">
											{project.highlights?.map(highlight => (
												<li>{highlight}</li>
											))}
										</ul>
									</div>
									{project.highlights && (
										<div class="flex flex-wrap gap-2">
											{project.keywords.map(keyword => (
												<div class="inline-block rounded-md bg-blue-gray-50 p-1 font-mono text-xs font-semibold">
													{keyword}
												</div>
											))}
										</div>
									)}
								</div>
							))
						}
					</div>
				</div>
				<div class="mt-2 space-y-8 print:space-y-4">
					<h2 class="print:text-lg text-2xl font-bold">Recent Talks</h2>
					{/* web layout */}
					<div class="flex flex-1 flex-col flex-wrap gap-4 sm:flex-row print:hidden">
						{
							talks.map(talk => (
								<div class="basis-44 rounded-lg border border-gray-100 p-4">
									<a href={talk.url} target="_blank" class="no-underline">
										<div class="flex flex-col items-center space-y-2 px-2 pb-4 pt-1 text-center">
											<h3 class="text-center text-xs font-bold leading-tight text-gray-900">{talk.title}</h3>
											{talk.img ? (
												<AssetImage
													class="not-prose mx-1 aspect-video h-auto max-w-36 rounded pb-1"
													src={talk.img}
													alt={talk.title}
												/>
											) : (
												<Image
													inferSize={true}
													class="not-prose mx-1 aspect-video h-auto max-w-36 rounded pb-1"
													src={talk.videoId ? getVideoThumbnail(talk.videoId) : ''}
													alt={talk.title}
												/>
											)}
											<div class="align-content-center justify-content-center flex flex-col">
												<div class="sticky font-mono text-xs font-bold leading-tight text-gray-500">
													{talk.location}
												</div>
												<div class="font-mono text-xs text-gray-500">{dateToYear(talk.date)}</div>
											</div>
											<p class="font-sans text-xs">{talk.summary}</p>
										</div>
									</a>
								</div>
							))
						}
					</div>
					{/* print layout */}
					<div class="hidden flex-1 flex-col flex-wrap sm:flex-row print:flex">
						{
							talks.map(talk => (
								<div class="flex py-2">
									{talk.img ? (
										<AssetImage
											class="not-prose mx-1 aspect-video max-w-36 rounded pb-1"
											src={talk.img}
											alt={talk.title}
										/>
									) : (
										<Image
											inferSize={true}
											class="not-prose mx-1 aspect-video max-w-36 rounded pb-1"
											src={talk.videoId ? getVideoThumbnail(talk.videoId) : ''}
											alt={talk.title}
										/>
									)}
									<div>
										<div class="flex flex-col space-y-2 px-2 pb-4 pt-1">
											<h3 class="text-md font-medium leading-tight text-gray-900">{talk.title}</h3>
											<div class="align-content-center justify-content-center flex">
												<div class="sticky font-mono text-xs font-bold leading-tight text-gray-700">
													{talk.location}
												</div>
												<div class="pl-2 font-mono text-xs text-gray-600">{dateToYear(talk.date)}</div>
											</div>
											<a href={`https://youtu.be/${getVideoId(talk.url)}`} class="font-mono text-xs text-gray-600">
												{`youtu.be/${getVideoId(talk.url)}`}
											</a>
											<p class="font-mono text-xs">{talk.summary}</p>
										</div>
									</div>
								</div>
							))
						}
					</div>
				</div>
				<div class="mt-2 space-y-8 print:space-y-4">
					<h2 class="print:text-lg text-2xl font-bold">Skills</h2>
					<div class="flex gap-4">
						{
							data.skills.map(skill => (
								<div class="inline-block rounded-md bg-blue-gray-50 p-1 font-mono text-xs font-semibold">
									{skill.name}
								</div>
							))
						}
					</div>
					<div class="mt-2 space-y-8 print:space-y-4">
						<h2 class="print:text-lg text-2xl font-bold">Education</h2>
						{
							data.education.map(school => (
								<div class="space-y-2">
									<div>
										<div class="flex justify-between">
											<div class="flex flex-col items-baseline gap-2 sm:flex-row">
												<div class="text-lg flex items-baseline p-0 font-medium">{school.institution}</div>
											</div>
											{false && (
												<div class="flex items-center font-mono text-xs">
													<div>{dateToYear(school.startDate)}</div>
													<div>&nbsp;-&nbsp;</div>
													<div>{school.endDate ? dateToYear(school.endDate) : 'Present'}</div>
												</div>
											)}
										</div>
										<div class="font-mono">
											{school.studyType}, {school.area}
										</div>
									</div>
									<div class="border-b border-gray-200 sm:hidden" />
								</div>
							))
						}
					</div>
				</div>
			</section>
		</main>
	</body>
</html>
